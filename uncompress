#!/usr/bin/env python
import os,sys

def rename_input(name, extension):
	os.system("cp %s %s.%s" % (name, name, extension))
  	return name + "." + extension

def find_extension(name):
	os.system("file %s > filetype" % name)
	out = open("filetype", "r")
	filetype  = out.read().split("\n")
	out.close()
	os.system("rm filetype")
	print(filetype)
	itrtype = { "7-zip archive data"	: "7z",
				"lzip compressed data"	: "lzip",
				"gzip compressed data"	: "gz",
				"POSIX tar archive"		: "tar",
				"Zip archive data"		: "zip",
				"bzip2 compressed data" : "bz2",
				"current ar archive" 	: "a",
				"lzop compressed data" 	: "lzop",
				"xz compressed data" 	: "xz"
				}.iteritems()
	for output, ext in itrtype:
		if output in filetype[0]:
			return ext

def uncompress(name, ext, output):
	os.system("mkdir %s" % output)
	cmdlist = { "7z" 	: ["7z e -o %s %s " % (output, name)],
				"lzip" 	: ["lzip -d -o %s %s" % (output, name) , "mv %s.out %s" % (name, output)],
				"gz" 	: ["gunzip -d %s ", "mv %s %s" % (name[:-(len(ext) + 1)], output)],
				"tar"	: ["tar -xvf %s -C %s " % (name, output)],
				"zip"	: ["unzip %s -d %s" % (name, output)],
				"bz2"	: ["tar -xvjf %s -C %s " % (name, output)],
				"a"		: ["ar p  %s > %s/result" % (name, output)],
				"lzop" 	: ["lzop -d %s " % (name), "mv %s %s" % (name[:-(len(ext) + 1)], output)],
				"xz" 	: ["xz -d %s" % name, "mv %s %s" % (name[:-(len(ext) + 1)], output)]
				}.get(ext)
	for cmd in cmdlist:
		os.system(cmd)
	os.system("rm %s" % name)

def usage():
	print("uncompress:")
	print("usage: uncompress source_file [target_directory]")
	return

def main():
	if len(sys.argv) < 2 or sys.argv[1] == "-h" :
		return usage()
	if len(sys.argv) == 3:
		output = sys.argv[2]
	else :
		output = "."
	ext = find_extension(sys.argv[1])
	if ext is None:
		print("extension not found ")
		return
	inname = rename_input(sys.argv[1], ext)
	uncompress(inname, ext, output)

main()